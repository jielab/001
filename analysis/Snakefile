sequences = "data/sequences.fasta"
metadata = "data/metadata.tsv"
dropped_strains = "data/unknown.exclude"
reference = "config/reference.gb"
colors = "config/colors.tsv"
auspice_config = "config/auspice_config.json"
centroids = "/mnt/d/files/countries.centroids.tsv"

rule all:
    input:
        "auspice/hchikv.json",
        "auspice/tree.json"

rule index:
    input: sequences
    output: "results/index.tsv"
    shell: "augur index --sequences {input} --output {output}"

rule filter:
    input:
        sequences=sequences,
        index="results/index.tsv",
        metadata=metadata,
        exclude=dropped_strains
    output: "results/filtered.fasta"
    shell: """
    augur filter \
        --sequences {input.sequences} \
        --sequence-index {input.index} \
        --metadata {input.metadata} \
        --output-sequences {output} \
        --min-length 11000 \
        --min-date 2000 \
        --exclude {input.exclude}
    """

rule align:
    input: "results/filtered.fasta"
    output: "results/aligned.fasta"
    shell: """
    augur align \
        --sequences {input} \
        --reference-sequence {reference} \
        --output {output} \
        --fill-gaps
    """

rule distance:
    input: "results/aligned.fasta"
    output: "results/pairwise_distances.tsv"
    shell: """
    augur distance \
        --alignment {input} \
        --output {output}
    """

rule detect_outliers:
    input: "results/pairwise_distances.tsv"
    output: "results/divergent_outliers.txt"
    run:
        import pandas as pd
        df = pd.read_csv(input[0], sep="\t", index_col=0)
        mean_dist = df.mean(axis=1)
        q1 = mean_dist.quantile(0.25); q3 = mean_dist.quantile(0.75)
        iqr = q3 - q1
        threshold = q3 + 3 * iqr
        outliers = mean_dist[mean_dist > threshold]
        outliers.sort_values(ascending=False).to_csv(output[0], sep="\t", header=False)

rule tree:
    input: "results/aligned.fasta"
    output: "results/tree.raw.nwk"
    shell: "augur tree --alignment {input} --output {output}"

rule refine:
    input:
        tree="results/tree.raw.nwk",
        alignment="results/aligned.fasta",
        metadata=metadata
    output:
        tree="results/tree.nwk",
        branches="results/branch_lengths.json"
    shell: """
    augur refine \
        --tree {input.tree} \
        --alignment {input.alignment} \
        --metadata {input.metadata} \
        --output-tree {output.tree} \
        --output-node-data {output.branches} \
        --timetree \
        --coalescent opt \
        --date-confidence \
        --date-inference marginal \
        --clock-filter-iqd 2
    """

rule ancestral:
    input:
        tree="results/tree.nwk",
        alignment="results/aligned.fasta"
    output: "results/nt_muts.json"
    shell: """
    augur ancestral \
        --tree {input.tree} \
        --alignment {input.alignment} \
        --output-node-data {output} \
        --inference joint
    """

rule translate:
    input:
        tree="results/tree.nwk",
        nt="results/nt_muts.json"
    output: "results/aa_muts.json"
    shell: """
    augur translate \
        --tree {input.tree} \
        --ancestral-sequences {input.nt} \
        --reference-sequence {reference} \
        --output-node-data {output}
    """

rule traits:
    input:
        tree="results/tree.nwk",
        metadata=metadata
    output: "results/traits.json"
    shell: """
    augur traits \
        --tree {input.tree} \
        --metadata {input.metadata} \
        --output-node-data {output} \
        --columns country region
    """

rule export_tree:
    input:
        tree="results/tree.nwk",
        branches="results/branch_lengths.json",
        metadata=metadata
    output: "auspice/tree.json"
    shell: """
    augur export v2 \
        --tree {input.tree} \
        --node-data {input.branches} \
        --metadata {input.metadata} \
        --output {output}
    """

rule export_auspice:
    input:
        tree="results/tree.nwk",
        metadata=metadata,
        traits="results/traits.json",
        branches="results/branch_lengths.json",
        nt="results/nt_muts.json",
        aa="results/aa_muts.json"
    output: "auspice/hchikv.json"
    shell: """
    augur export v2 \
        --tree {input.tree} \
        --metadata {input.metadata} \
        --node-data {input.traits} {input.branches} {input.nt} {input.aa} \
        --colors {colors} \
        --lat-longs {centroids} \
        --auspice-config {auspice_config} \
        --output {output}
    """
